<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nanwe.prog.service.impl.ProgSurvItemMapper">

	<select id="selectSysSurvItemList" parameterType="map" resultType="progSurvItemVO">
		SELECT
					  SURV_ID
					, QUES_IDX
					, ITEM_IDX
					, ITEM_TITLE
					, ITEM_POINT
					, ITEM_SORT
					, USE_YN
					, INPT_ID
					, INPT_IP
					, INPT_DTTM
					, MODI_ID
					, MODI_IP
					, MODI_DTTM
		FROM		PROG_SURV_BANK_ITEM
		WHERE		SURV_ID = #{survId}
		AND			QUES_IDX = #{quesIdx}
		<if test='useYn != null and useYn != ""'>
			AND		USE_YN = #{useYn}
		</if>
		ORDER BY	ITEM_SORT ASC
	</select>
	
	<select id="selectSurvItemList" parameterType="map" resultType="progSurvItemVO">
		SELECT
					  SURV_ID
					, QUES_IDX
					, ITEM_IDX
					, ITEM_TITLE
					, ITEM_POINT
					, ITEM_SORT
					, USE_YN
					, INPT_ID
					, INPT_IP
					, INPT_DTTM
					, MODI_ID
					, MODI_IP
					, MODI_DTTM
		FROM		PROG_SURV_ITEM
		WHERE		PROG_ID = #{progId}
		AND			QUES_IDX = #{quesIdx}
		<if test='useYn != null and useYn != ""'>
			AND		USE_YN = #{useYn}
		</if>
		ORDER BY	ITEM_SORT ASC
	</select>
	
	<insert id="insertSurvItem" parameterType="progSurvItemVO">
		<selectKey resultType="int" keyProperty="itemIdx" order="BEFORE">
			SELECT IFNULL(MAX(A.ITEM_IDX), 0)+1 FROM PROG_SURV_BANK_ITEM A WHERE A.SURV_ID = #{survId} AND A.QUES_IDX = #{quesIdx}
		</selectKey>
		INSERT
		INTO	PROG_SURV_BANK_ITEM
		(
				  SURV_ID
				, QUES_IDX
				, ITEM_IDX
				, ITEM_TITLE
				, ITEM_POINT
				, ITEM_SORT
				, USE_YN
				, INPT_ID
				, INPT_IP
				, INPT_DTTM
				, MODI_ID
				, MODI_IP
				, MODI_DTTM
		) VALUES (
				  #{survId}
				, #{quesIdx}
				, #{itemIdx}
				, #{itemTitle}
				, #{itemPoint}
				<choose>
					<when test="itemSort gt 0">
						, #{itemSort}
					</when>
					<otherwise>
						, (SELECT IFNULL(MAX(A.ITEM_SORT), 0)+1 FROM PROG_SURV_BANK_ITEM A WHERE A.SURV_ID = #{survId} AND A.QUES_IDX = #{quesIdx})
					</otherwise>
				</choose>
				, #{useYn}
				, #{inptId}
				, #{inptIp}
				, NOW()
				, #{inptId}
				, #{inptIp}
				, NOW()
		);
	</insert>
	
	<update id="updateSurvItem" parameterType="progSurvItemVO">
		UPDATE
				PROG_SURV_BANK_ITEM
		SET
			 	  ITEM_TITLE	= #{itemTitle}
				, ITEM_POINT	= #{itemPoint}
				, ITEM_SORT		= #{itemSort}
				, USE_YN		= #{useYn}
				, MODI_ID		= #{modiId}
				, MODI_IP		= #{modiIp}
				, MODI_DTTM		= NOW()
		WHERE	SURV_ID = #{survId}
		AND		QUES_IDX = #{quesIdx}
		AND		ITEM_IDX = #{itemIdx}
	</update>
	
	<delete id="deleteSurvItem" parameterType="progSurvItemVO">
		DELETE 
		FROM		PROG_SURV_BANK_ITEM
		WHERE		SURV_ID = #{survId}
		AND			QUES_IDX = #{quesIdx}
		AND			ITEM_IDX = #{itemIdx}
	</delete>

	<delete id="deleteSurvItemBySurvId" parameterType="string">
		DELETE 
		FROM		PROG_SURV_BANK_ITEM
		WHERE		SURV_ID = #{survId}
	</delete>

	<delete id="deleteSurvItemByQuesIdx" parameterType="map">
		DELETE 
		FROM		PROG_SURV_BANK_ITEM
		WHERE		SURV_ID = #{survId}
		AND			QUES_IDX = #{quesIdx}
	</delete>
	
	<select id="selectSurvItemResult" parameterType="map" resultType="progSurvItemVO">
		SELECT 
		        	S.* 
		        	, CONCAT(CAST(ROUND((S.ANSW_CNT/${totalCount}) * 100, 1) AS CHAR(5)),'%') AS ANSW_PERCENT
		FROM (
					SELECT
					              A.SURV_ID
								, A.QUES_IDX
								, A.ITEM_IDX
								, A.ITEM_TITLE
								, A.ITEM_POINT
								, A.ITEM_SORT
								, IFNULL(B.ANSW_CNT, 0) AS ANSW_CNT
					FROM		PROG_SURV_ITEM A
					LEFT JOIN   (
					                SELECT	    
									              QUES_IDX
									            , ITEM_IDX
									            , COUNT(ITEM_IDX) AS ANSW_CNT
									FROM	    PROG_SURV_ANSW
									WHERE       PROG_ID = #{progId}
									AND			QUES_IDX = #{quesIdx}
									GROUP BY    QUES_IDX, ITEM_IDX
					            ) B
					ON          (A.QUES_IDX = B.QUES_IDX AND A.ITEM_IDX = B.ITEM_IDX)
					WHERE       A.PROG_ID = #{progId}
					AND			A.QUES_IDX = #{quesIdx}
					AND		    A.USE_YN = 'Y'
					ORDER BY	A.ITEM_SORT ASC
		) S
	</select>
	
	<select id="selectProgSurvItemCnt" parameterType="string" resultType="int">
		SELECT 
				COUNT(*)
		FROM 	PROG_SURV_ITEM
		WHERE	PROG_ID = #{progId}
	</select>
	
	
	<select id="selectSurvItemResultForExcel" parameterType="map" resultType="HashMap">
		SELECT
				    S.PROG_NM,
				    S.QUES_IDX,
				    S.QUES_TITLE,
				    CASE 
				        WHEN S.QUES_TYPE = 'RADIO' THEN '객관식'
				        WHEN S.QUES_TYPE = 'CHECK' THEN '다중선택'
				        WHEN S.QUES_TYPE = 'ETC' THEN '주관식'
				        ELSE S.QUES_TYPE
				    END AS QUES_TYPE,
				    S.QUES_SORT,
				    CASE 
				        WHEN S.QUES_TYPE = 'ETC' THEN Z.ANSW_CONTENT
				        ELSE S.ITEM_TITLE
				    END AS ITEM_TITLE,
				    S.ITEM_IDX,
				    CONCAT(CAST(ROUND((COUNT(DISTINCT Z.INPT_ID) / T.TOTAL_CNT) * 100, 1) AS CHAR(5)), '%') AS ANSW_PERCENT
		FROM (
				    SELECT
						        A.PROG_ID,
						        (SELECT PROG_NM FROM PROG_MST WHERE PROG_ID = A.PROG_ID) AS PROG_NM,
						        A.QUES_IDX,
						        A.QUES_TITLE,
						        I.ITEM_TITLE,
						        I.ITEM_IDX,
						        A.QUES_TYPE,
						        A.QUES_SORT
				    FROM 		PROG_SURV_QUES A
				    JOIN 		PROG_SURV_ITEM I ON A.PROG_ID = I.PROG_ID AND A.QUES_IDX = I.QUES_IDX
				    WHERE 		A.PROG_ID = #{progId}
				    AND 		A.USE_YN = 'Y'
				) S
				LEFT JOIN 		PROG_SURV_ANSW Z ON S.QUES_IDX = Z.QUES_IDX AND S.PROG_ID = Z.PROG_ID AND (S.QUES_TYPE = 'ETC' OR S.ITEM_IDX = Z.ITEM_IDX)
		JOIN (
		    SELECT
				        QUES_IDX,
				        COUNT(DISTINCT INPT_ID) AS TOTAL_CNT
		    FROM 		PROG_SURV_ANSW
		    WHERE 		PROG_ID = #{progId}
		    GROUP BY 	QUES_IDX
		) T ON S.QUES_IDX = T.QUES_IDX
		GROUP BY S.PROG_ID, S.QUES_IDX, S.QUES_TITLE, CASE WHEN S.QUES_TYPE = 'ETC' THEN Z.ANSW_CONTENT ELSE S.ITEM_TITLE END, S.QUES_TYPE, S.ITEM_IDX, S.QUES_SORT
		ORDER BY S.QUES_IDX, S.ITEM_IDX
	</select>
	
	<select id="selectSurvItemTotCntForExcel" parameterType="int" resultType="int">
		SELECT COUNT(A.PROG_ID)
		FROM(
			SELECT 
					PROG_ID
			FROM PROG_SURV_ANSW
			WHERE PROG_ID = #{progId}
			GROUP BY USER_ID
		) A
	</select>
	
</mapper>