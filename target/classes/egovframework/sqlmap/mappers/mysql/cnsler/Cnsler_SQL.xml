<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nanwe.cnsler.service.impl.CnslerMapper">
	
	<!-- 상담원 관리 START -->
	<select id="selectCnslerTotCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(CNSLER_ID)
		FROM CNSLER_MST
		WHERE 1=1
		<if test='searchValue != null and searchValue !=""'>
			<choose>
				<when test='searchOption == "title"'>
					AND TITLE LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "writer"'>
					AND WRITER LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "inptId"'>
					AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectCnslerList" parameterType="map" resultType="cnslerVO">
		<include refid="paging.preSql"></include>
			SELECT
				  A.CNSLER_ID
				, B.USER_NM
				, A.CNSL_TYPE_CD
				, A.CNSL_TYPE_TRACK
				, A.CNSL_TYPE_JOB
				, A.CNSL_TYPE_LIFE
				, A.CNSL_TYPE_RESUME
				, A.CNSL_TYPE_INTV
				, A.CNSL_PLACE
				, A.CNSL_AM_YN
				, A.CNSL_PM_YN
				, A.USE_YN
				, A.CNSL_COLG_CD
				, A.CNSL_DEPT_CD
				, A.CNSL_MEMO
				, A.INPT_ID
				, A.INPT_IP
				, A.INPT_DTTM
				, A.MODI_ID
				, A.MODI_IP
				, A.MODI_DTTM
			FROM CNSLER_MST A
			LEFT OUTER JOIN COM_USER B
			ON A.CNSLER_ID = B.USER_ID
			WHERE 1=1
			<if test='searchValue != null and searchValue !=""'>
				<choose>
					<when test='searchOption == "cnslerId"'>
						AND CNSLER_ID LIKE CONCAT('%', #{searchValue} , '%')
					</when>
					<when test='searchOption == "cnslTypeCd"'>
						AND CNSL_TYPE_CD LIKE CONCAT('%', #{searchValue} , '%')
					</when>
					<when test='searchOption == "inptId"'>
						AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
					</when>
				</choose>
			</if>
			
			ORDER BY INPT_DTTM DESC
		<include refid="paging.postSql"></include>
	</select>
	
	<select id="selectCnsler" parameterType="map" resultType="cnslerVO">
		SELECT
			  CNSLER_ID
			, CNSL_TYPE_CD
			, CNSL_TYPE_TRACK
			, CNSL_TYPE_JOB
			, CNSL_TYPE_LIFE
			, CNSL_TYPE_RESUME
			, CNSL_TYPE_INTV
			, CNSL_PLACE
			, CNSL_AM_YN
			, CNSL_PM_YN
			, USE_YN
			, CNSL_COLG_CD
			, CNSL_DEPT_CD
			, CNSL_MEMO
			, INPT_ID
			, INPT_IP
			, INPT_DTTM
			, MODI_ID
			, MODI_IP
			, MODI_DTTM
		FROM CNSLER_MST
		WHERE CNSLER_ID = #{cnslerId}
	</select>
	
	<insert id="insertCnsler" parameterType="cnslerVO">
		INSERT INTO CNSLER_MST
			(
			  CNSLER_ID
			, CNSL_TYPE_CD
			, CNSL_TYPE_TRACK
			, CNSL_TYPE_JOB
			, CNSL_TYPE_LIFE
			, CNSL_TYPE_RESUME
			, CNSL_TYPE_INTV
			, CNSL_PLACE
			, CNSL_AM_YN
			, CNSL_PM_YN
			, USE_YN
			, CNSL_COLG_CD
			, CNSL_DEPT_CD
			, CNSL_MEMO
			, INPT_ID
			, INPT_IP
			, INPT_DTTM
			)
			VALUES
			(
				  #{cnslerId}
				, #{cnslTypeCd}
				, #{cnslTypeTrack}
				, #{cnslTypeJob}
				, #{cnslTypeLife}
				, #{cnslTypeResume}
				, #{cnslTypeIntv}
				, #{cnslPlace}
				, #{cnslAmYn}
				, #{cnslPmYn}
				, #{useYn}
				, #{cnslColgCd}
				, #{cnslDeptCd}
				, #{cnslMemo}
				, #{inptId}
				, #{inptIp}
				, NOW()
			)
	</insert>
	
	<update id="updateCnsler" parameterType="cnslerVO">
		UPDATE CNSLER_MST SET
			  CNSL_TYPE_CD = #{cnslTypeCd}
			, CNSL_TYPE_TRACK = #{cnslTypeTrack}
			, CNSL_TYPE_JOB = #{cnslTypeJob}
			, CNSL_TYPE_LIFE = #{cnslTypeLife}
			, CNSL_TYPE_RESUME = #{cnslTypeResume}
			, CNSL_TYPE_INTV = #{cnslTypeIntv}
			, CNSL_PLACE = #{cnslPlace}
			, CNSL_AM_YN = #{cnslAmYn}
			, CNSL_PM_YN = #{cnslPmYn}
			, USE_YN = #{useYn}
			, CNSL_COLG_CD = #{cnslColgCd}
			, CNSL_DEPT_CD = #{cnslDeptCd}
			, CNSL_MEMO = #{cnslMemo}
			, MODI_ID = #{modiId}
			, MODI_IP = #{modiIp}
			, MODI_DTTM = NOW()
		WHERE CNSLER_ID = #{cnslerId}
	</update>
	
	<delete id="deleteCnsler" parameterType="String">
		DELETE FROM CNSLER_MST
		WHERE CNSLER_ID = #{cnslerId}
	</delete>
	
	<!-- 상담원 등록시 중복체크 -->
	<select id="cnslerDuplChk" parameterType="String" resultType="int">
		SELECT
			  COUNT(CNSLER_ID) AS DUPL_CHK
		FROM CNSLER_MST
		WHERE CNSLER_ID = #{cnslerId}
	</select>
	
	<!-- 상담원 부서 삭제 -->
	<delete id="deleteCnslerDept">
		DELETE FROM CNSLER_MNG_DEPT WHERE CNSLER_ID = #{cnslerId}
	</delete>
	
	<!-- 상담원 부서 등록  -->
	<insert id="insertCnslerColg" parameterType="cnslerVO">
		INSERT INTO CNSLER_MNG_DEPT
			SET
		  CNSLER_ID = #{cnslerId}
		, COLG_CD = #{cnslColgCd}
		, DEPT_CD = #{cnslDeptCd}
		, INPT_ID = #{inptId}
		, INPT_IP = #{inptIp}
		, INPT_DTTM = NOW()
	</insert>
	
	<!-- 상담원 담당부서 조회 -->
	<select id="selectColgByCnsler" parameterType="String" resultType="cnslerVO">
		SELECT
			  A.CNSLER_ID
			, A.COLG_CD
			, A.DEPT_CD
			, A.INPT_ID
			, A.INPT_IP
			, A.INPT_DTTM
			, A.MODI_ID
			, A.MODI_IP
			, A.MODI_DTTM
			, (SELECT MAX(DEPT_NM_KOR )FROM COM_DEPT_CD WHERE DEPT_CD = B.HI_DEPT_CD) AS COLG_NM_KOR
			, B.DEPT_NM_KOR AS DEPT_NM_KOR
		FROM CNSLER_MNG_DEPT A
		LEFT OUTER JOIN COM_DEPT_CD B
		ON A.DEPT_CD = B.DEPT_CD
		WHERE CNSLER_ID = #{cnslerId}
		GROUP BY A.COLG_CD, A.CNSLER_ID, A.DEPT_CD, A.INPT_ID, A.INPT_IP, A.INPT_DTTM, A.MODI_ID, A.MODI_IP, A.MODI_DTTM, COLG_NM_KOR, DEPT_NM_KOR
		ORDER BY COLG_CD
	</select>
	
	<!-- 상담원 담당학과 조회 -->
	<select id="selectDeptByCnsler" parameterType="String" resultType="cnslerVO">
		SELECT
			  A.CNSLER_ID
			, A.COLG_CD
			, A.DEPT_CD
			, A.INPT_ID
			, A.INPT_IP
			, A.INPT_DTTM
			, A.MODI_ID
			, A.MODI_IP
			, A.MODI_DTTM
			, (SELECT MAX(DEPT_NM_KOR )FROM COM_DEPT_CD WHERE HI_DEPT_CD = B.HI_DEPT_CD) AS COLG_NM_KOR
			, B.DEPT_NM_KOR AS DEPT_NM_KOR
		FROM CNSLER_MNG_DEPT A
		LEFT OUTER JOIN COM_DEPT_CD B
		ON A.DEPT_CD = B.DEPT_CD
		WHERE CNSLER_ID = #{cnslerId}
		GROUP BY A.DEPT_CD, A.COLG_CD, A.DEPT_CD, A.INPT_ID, A.INPT_IP, A.MODI_ID, A.MODI_IP, A.MODI_DTTM, COLG_NM_KOR, DEPT_NM_KOR
		ORDER BY COLG_CD
	</select>
	
	<!-- 상담원 관리 END -->
	
	<!-- 상담관리 START -->
	<select id="selectCnslTotCnt" resultType="int">
		SELECT
			COUNT(CNSL_ID)
		FROM CNSL_MST
		WHERE 1=1
		<if test='searchValue != null and searchValue !=""'>
			<choose>
				<when test='searchOption == "title"'>
					AND TITLE LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "writer"'>
					AND WRITER LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "inptId"'>
					AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectCnslList" parameterType="map" resultType="map" >
		<include refid="paging.preSql"></include>
		SELECT                        
			  A.CNSL_ID          
			, A.USER_ID          
			, B.USER_NM          
			, A.USER_TYPE_CD     
			, A.STD_NO           
			, A.COLG_CD          
			, A.DEPT_CD          
			, A.GRADE            
			, CASE               
					WHEN	A.SEX_CD = '1' THEN '남자'
					WHEN	A.SEX_CD = '2' THEN '여자'
					ELSE 	'-'
			  END AS SEX_CD      
			, A.CHAT_ID          
			, A.CNSL_TYPE_CD     
			, A.CNSL_TYPE_TRACK  
			, A.CNSL_TYPE_JOB    
			, A.CNSL_TYPE_LIFE   
			, A.CNSL_TYPE_RESUME 
			, A.CNSL_TYPE_INTV   
			, A.CNSL_MTH_CD      
			, A.REQST_TEXT       
			, A.YEAR             
			, A.SEMSTR           
			, A.REQST_DT         
			, DATE_FORMAT(A.HOPE_DT, '%Y-%m-%d') AS HOPE_DT          
			, A.HOPE_TM          
			, A.CNSL_STATUS_CD   
			, A.CNSL_DT          
			, A.CNSLER_ID
			, (SELECT USER_NM FROM COM_USER WHERE USER_ID = A.CNSLER_ID) AS CNSLER_NM
			, A.CNSLER_CN_OPEN   
			, A.CNSLER_CN_SECRET 
			, A.INPT_ID          
			, A.INPT_IP          
			, A.INPT_DTTM        
			, A.MODI_ID          
			, A.MODI_IP          
			, A.MODI_DTTM        
		FROM CNSL_MST A         
		LEFT OUTER JOIN COM_USER B
		ON A.USER_ID = B.USER_ID
		WHERE 1=1
		<if test='searchValue != null and searchValue !=""'>
			<choose>
				<when test='searchOption == "title"'>
					AND TITLE LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "writer"'>
					AND WRITER LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "inptId"'>
					AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
				</when>
			</choose>
		</if>
		ORDER BY INPT_DTTM DESC
		<include refid="paging.postSql"></include>
	</select>
	
	<!-- 엑셀용 전체 상담리스트 -->
	<select id="selectCnslListForExcel" parameterType="map" resultType="HashMap" >
		SELECT
			C.*
			FROM
			(SELECT 
					  CONVERT(@ROWNUM := @ROWNUM +1, CHAR) AS ROWNUM                 
					, A.CNSL_ID          
					, A.USER_ID          
					, B.USER_NM          
					, A.USER_TYPE_CD 
					, SFN_GET_CODENM(A.USER_TYPE_CD) AS USER_TYPE_NM    
					, A.STD_NO           
					, A.COLG_CD
					, SFN_GET_DEPTNM(A.COLG_CD) AS COLG_NM
					, SFN_GET_DEPTNM(A.DEPT_CD) AS DEPT_NM
					, A.GRADE            
					, CASE               
							WHEN	A.SEX_CD = '1' THEN '남자'
							WHEN	A.SEX_CD = '2' THEN '여자'
							ELSE 	'-'
					  END AS SEX_CD      
					, A.CHAT_ID          
					, A.CNSL_TYPE_CD     
					, A.CNSL_TYPE_TRACK  
					, A.CNSL_TYPE_JOB    
					, A.CNSL_TYPE_LIFE   
					, A.CNSL_TYPE_RESUME 
					, A.CNSL_TYPE_INTV   
					, A.CNSL_MTH_CD      
					, SFN_GET_CODENM(A.CNSL_MTH_CD) AS CNSL_MTH_NM
					, A.REQST_TEXT       
					, A.YEAR             
					, A.SEMSTR           
					, A.REQST_DT         
					, DATE_FORMAT(A.HOPE_DT, '%Y-%m-%d') AS HOPE_DT
					, DATE_FORMAT(STR_TO_DATE(A.HOPE_TM, '%H%i'), '%H:%i') AS HOPE_TM          
					, A.CNSL_STATUS_CD
					, SFN_GET_CODENM(A.CNSL_STATUS_CD) AS CNSL_STATUS_NM
					, A.CNSL_DT          
					, A.CNSLER_ID
					, (SELECT USER_NM FROM COM_USER WHERE USER_ID = A.CNSLER_ID) AS CNSLER_NM
					, A.CNSLER_CN_OPEN   
					, A.CNSLER_CN_SECRET 
					, A.CNSL_PLACE
					, A.INPT_ID          
					, A.INPT_IP          
					, A.INPT_DTTM        
					, A.MODI_ID          
					, A.MODI_IP          
					, A.MODI_DTTM       
				FROM CNSL_MST A         
				LEFT OUTER JOIN COM_USER B
				ON A.USER_ID = B.USER_ID
				, (SELECT @ROWNUM := 0) TMP
				ORDER BY INPT_DTTM
			) C
		ORDER BY CAST(ROWNUM AS UNSIGNED) DESC
	</select>
	
	<!-- 상담관리 START -->
	<select id="selectMyCnslTotCnt" resultType="int">
		SELECT
			COUNT(CNSL_ID)
		FROM CNSL_MST
		WHERE 1=1
		<!--AND	USER_ID = #{userId }-->
		<if test='searchValue != null and searchValue !=""'>
			<choose>
				<when test='searchOption == "title"'>
					AND TITLE LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "writer"'>
					AND WRITER LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "inptId"'>
					AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "cnslUserNm"'>
					AND USER_NM LIKE CONCAT('%', #{searchValue} , '%')
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectMyCnslList" parameterType="map" resultType="map" >
		<include refid="paging.preSql"></include>
		SELECT                        
			  A.CNSL_ID          
			, A.USER_ID          
			, B.USER_NM          
			, A.USER_TYPE_CD     
			, A.STD_NO           
			, A.COLG_CD          
			, A.DEPT_CD          
			, A.GRADE            
			, CASE               
					WHEN	A.SEX_CD = '1' THEN '남자'
					WHEN	A.SEX_CD = '2' THEN '여자'
					ELSE 	'-'
			  END AS SEX_CD      
			, A.CHAT_ID          
			, A.CNSL_TYPE_CD     
			, A.CNSL_TYPE_TRACK  
			, A.CNSL_TYPE_JOB    
			, A.CNSL_TYPE_LIFE   
			, A.CNSL_TYPE_RESUME 
			, A.CNSL_TYPE_INTV   
			, A.CNSL_MTH_CD      
			, A.REQST_TEXT       
			, A.YEAR             
			, A.SEMSTR           
			, A.REQST_DT         
			, A.HOPE_DT          
			, A.HOPE_TM          
			, A.CNSL_STATUS_CD   
			, A.CNSL_DT          
			, A.CNSLER_ID        
			, A.CNSLER_CN_OPEN   
			, A.CNSLER_CN_SECRET 
			, A.INPT_ID          
			, A.INPT_IP          
			, A.INPT_DTTM        
			, A.MODI_ID          
			, A.MODI_IP          
			, A.MODI_DTTM
			, A.TITLE
		FROM CNSL_MST A         
		LEFT OUTER JOIN COM_USER B
		ON A.USER_ID = B.USER_ID
		WHERE 1=1
		<!--AND	A.USER_ID = #{userId }-->
		<if test='searchValue != null and searchValue !=""'>
			<choose>
				<when test='searchOption == "title"'>
					AND TITLE LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "writer"'>
					AND WRITER LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "inptId"'>
					AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "cnslUserNm"'>
					AND A.USER_NM LIKE CONCAT('%', #{searchValue} , '%')
				</when>
			</choose>
		</if>
		ORDER BY INPT_DTTM DESC
		<include refid="paging.postSql"></include>
	</select>
	
	<!-- 상담원별 상담일정 카운트 -->
	<select id="selectCnslerSchCnt">
		SELECT
			COUNT(CNSL_ID)
		FROM CNSL_MST
		WHERE CNSLER_ID = #{cnslerId}
	</select>
	
	<!-- 상담원별 상담일정 조회 -->
	<select id="selectCnslerSch" parameterType="map" resultType="map">
		SELECT
			  CNSLER_ID
			, SCH_DT
			, CNSL_AM_YN
			, CNSL_PM_YN
			, INPT_ID
			, INPT_IP
			, INPT_DTTM
			, MODI_ID
			, MODI_IP
			, MODI_DTTM
			, SCH_YM
		FROM CNSLER_SCH
		WHERE CNSLER_ID = #{cnslerId}
	</select>
	
	
	<!-- 관리자 전체 조회 -->
	<select id="selectCnsl" parameterType="String" resultType="cnslerVO">
		SELECT
			  A.CNSL_ID
			, A.USER_ID
			, IFNULL(B.USER_NM, A.USER_NM) AS USER_NM
			, A.USER_TYPE_CD
			, A.MBPH_NO
			, A.STD_NO
			, A.COLG_CD AS CNSL_COLG_CD
			, A.DEPT_CD AS CNSL_DEPT_CD
			, (SELECT DEPT_NM_KOR FROM COM_DEPT_CD WHERE DEPT_CD = A.DEPT_CD) AS DEPT_NM_KOR
			, A.GRADE
			, CASE 
					WHEN	A.SEX_CD = '1' THEN '남자'
					WHEN	A.SEX_CD = '2' THEN '여자'
					ELSE 	'-'
			  END AS SEX_CD
			, A.CHAT_ID
			, A.CNSL_TYPE_CD
			, A.CNSL_TYPE_TRACK
			, A.CNSL_TYPE_JOB
			, A.CNSL_TYPE_LIFE
			, A.CNSL_TYPE_RESUME
			, A.CNSL_TYPE_INTV
			, A.CNSL_MTH_CD
			, A.REQST_TEXT
			, A.YEAR
			, A.SEMSTR
			, A.REQST_DT
			, DATE_FORMAT(A.HOPE_DT, '%Y-%m-%d') AS HOPE_DT
			, DATE_FORMAT(STR_TO_DATE(A.HOPE_TM, '%H%i'), '%H:%i') AS HOPE_TM
			, A.CNSL_STATUS_CD
			, A.CNSL_DT
			, A.CNSLER_ID
			, (SELECT USER_NM FROM COM_USER WHERE USER_ID = A.CNSLER_ID) AS CNSLER_NM
			, A.CNSLER_CN_OPEN
			, A.CNSLER_CN_SECRET
			, A.INPT_ID
			, A.INPT_IP
			, A.INPT_DTTM
			, A.MODI_ID
			, A.MODI_IP
			, A.MODI_DTTM
			, C.CNSL_PLACE
			, A.PW
		FROM CNSL_MST A
		LEFT OUTER JOIN COM_USER B
		ON A.USER_ID = B.USER_ID
		LEFT OUTER JOIN CNSLER_MST C
		ON A.CNSLER_ID = C.CNSLER_ID
		WHERE CNSL_ID = #{cnslId}
	</select>

	<select id="selectCnslSecret" parameterType="String" resultType="cnslerVO">
		SELECT
			A.CNSL_ID
			 , A.USER_ID
			 , IFNULL(B.USER_NM, A.USER_NM) AS USER_NM
			 , A.USER_TYPE_CD
			 , A.STD_NO
			 , A.COLG_CD AS CNSL_COLG_CD
			 , A.DEPT_CD AS CNSL_DEPT_CD
			 , (SELECT DEPT_NM_KOR FROM COM_DEPT_CD WHERE DEPT_CD = A.DEPT_CD) AS DEPT_NM_KOR
			 , A.GRADE
			 , CASE
				   WHEN	A.SEX_CD = '1' THEN '남자'
				   WHEN	A.SEX_CD = '2' THEN '여자'
				   ELSE 	'-'
			END AS SEX_CD
			 , A.CHAT_ID
			 , A.CNSL_TYPE_CD
			 , A.CNSL_TYPE_TRACK
			 , A.CNSL_TYPE_JOB
			 , A.CNSL_TYPE_LIFE
			 , A.CNSL_TYPE_RESUME
			 , A.CNSL_TYPE_INTV
			 , A.CNSL_MTH_CD
			 , A.REQST_TEXT
			 , A.YEAR
			 , A.SEMSTR
			 , A.REQST_DT
			 , DATE_FORMAT(A.HOPE_DT, '%Y-%m-%d') AS HOPE_DT
			 , DATE_FORMAT(STR_TO_DATE(A.HOPE_TM, '%H%i'), '%H:%i') AS HOPE_TM
			 , A.CNSL_STATUS_CD
			 , A.CNSL_DT
			 , A.CNSLER_ID
			 , (SELECT USER_NM FROM COM_USER WHERE USER_ID = A.CNSLER_ID) AS CNSLER_NM
			 , A.CNSLER_CN_OPEN
			 , A.CNSLER_CN_SECRET
			 , A.INPT_ID
			 , A.INPT_IP
			 , A.INPT_DTTM
			 , A.MODI_ID
			 , A.MODI_IP
			 , A.MODI_DTTM
			 , C.CNSL_PLACE
		FROM CNSL_MST A
				 LEFT OUTER JOIN COM_USER B
								 ON A.USER_ID = B.USER_ID
				 LEFT OUTER JOIN CNSLER_MST C
								 ON A.CNSLER_ID = C.CNSLER_ID
		WHERE CNSL_ID = #{cnslId}
	</select>
	
	<!-- 선택한 단과에 포함된 상담원조회 + 날짜 테이블 -->
	<select id="selectCnslerByColg" parameterType="map" resultType="cnslerVO">
		SELECT
			  A.CNSLER_ID
			, B.USER_NM
			, A.COLG_CD
			, C.CNSL_PLACE
			, D.SCH_DT
			, (CASE
				WHEN D.CNSL_AM_YN = 'Y' AND D.CNSL_PM_YN = 'Y' THEN '종일'
				WHEN D.CNSL_AM_YN = 'Y' THEN '오전'
				WHEN D.CNSL_PM_YN = 'Y' THEN '오후'
				ELSE '가능시간 선택 안됨'
				END) AS ABLE_TM
		FROM CNSLER_MNG_DEPT A
		LEFT OUTER JOIN COM_USER B
		ON A.CNSLER_ID = B.USER_ID
		LEFT OUTER JOIN CNSLER_MST C
		ON A.CNSLER_ID = C.CNSLER_ID
		LEFT OUTER JOIN CNSLER_SCH D
		ON A.CNSLER_ID = D.CNSLER_ID
		WHERE A.COLG_CD = #{cnslColgCd}
		AND	D.SCH_DT = DATE_FORMAT(#{schDt}, '%Y%m%d')
		GROUP BY A.CNSLER_ID
	</select>
	
	<!-- 상담 신청 -->
	<insert id="insertCnsl" parameterType="cnslerVO">
		<selectKey resultType="string" keyProperty="cnslId" order="BEFORE">
			SELECT CONCAT('CNSL_',LPAD(IFNULL(MAX(CAST(REPLACE(A.CNSL_ID, 'CNSL_', '') AS UNSIGNED)), 0)+1, 10, 0)) FROM CNSL_MST A
		</selectKey>
		INSERT INTO CNSL_MST
			(
				  CNSL_ID
				, USER_ID
				, USER_TYPE_CD
				, MBPH_NO
				, STD_NO
				, COLG_CD
				, DEPT_CD
				, GRADE
				, SEX_CD
				, CHAT_ID
				, CNSL_TYPE_CD
				, CNSL_TYPE_TRACK
				, CNSL_TYPE_JOB
				, CNSL_TYPE_LIFE
				, CNSL_TYPE_RESUME
				, CNSL_TYPE_INTV
				, CNSL_MTH_CD
				, REQST_TEXT
				, YEAR
				, SEMSTR
				, REQST_DT
				, HOPE_DT
				, HOPE_TM
				, CNSL_STATUS_CD
				, CNSL_DT
				, CNSLER_ID
				, CNSLER_CN_OPEN
				, CNSLER_CN_SECRET
				, INPT_ID
				, INPT_IP
				, INPT_DTTM
				, PW
				, TITLE
				, USER_NM
			)
			VALUES
			(
				  #{cnslId}
				, #{userId}
				, #{userTypeCd}
			  	, #{mbphNo}
				, #{stdNo}
				, #{cnslColgCd}
				, #{cnslDeptCd}
				, #{grade}
				, #{sexCd}
				, #{chatId}
				, #{cnslTypeCd}
				, #{cnslTypeTrack}
				, #{cnslTypeJob}
				, #{cnslTypeLife}
				, #{cnslTypeResume}
				, #{cnslTypeIntv}
				, #{cnslMthCd}
				, #{reqstText}
				, DATE_FORMAT(NOW(), '%Y')
				, #{semstr}
				, DATE_FORMAT(DATE(NOW()), '%Y%m%d')
				, DATE_FORMAT(#{hopeDt}, '%Y%m%d')
				, #{hopeTm}
				, #{cnslStatusCd}
				, #{cnslDt}
				, #{cnslerId}
				, #{cnslerCnOpen}
				, #{cnslerCnSecret}
				, #{inptId}
				, #{inptIp}
				, NOW()
				, #{pw}
				, #{title}
				, #{cnslUserNm}
			)
	</insert>
	
	
	<!-- 상담가능시간 조회 -->
	<select id="selectCnslerTmList" parameterType="cnslerVO" resultType="cnslerVO">
		SELECT 
			  CNSL_ID
			, USER_ID
			, USER_TYPE_CD
			, CNSLER_ID	
			, HOPE_TM
			, CNSL_STATUS_CD
		FROM CNSL_MST
		WHERE CNSLER_ID = #{cnslerId} 
		AND DATE_FORMAT(HOPE_DT, '%Y%m%d') = DATE_FORMAT(#{schDt}, '%Y%m%d')
		AND CNSL_STATUS_CD IN ('CNSL_STATUS_STEP1', 'CNSL_STATUS_STEP2')
	</select>
	
	<!-- 상담 1개수정 -->
	<update id="updateCnsl" parameterType="cnslerVO">
		UPDATE	CNSL_MST
			SET		  
					  CNSLER_ID			=	#{cnslerId}
					, CNSL_TYPE_TRACK 	= 	#{cnslTypeTrack}
					, CNSL_TYPE_JOB 	= 	#{cnslTypeJob}
					, CNSL_TYPE_LIFE	=	#{cnslTypeLife}
					, CNSL_TYPE_RESUME	=	#{cnslTypeResume}
					, CNSL_TYPE_INTV	=	#{cnslTypeIntv}
					, COLG_CD			=	#{cnslColgCd}
					, CNSL_MTH_CD		=	#{cnslMthCd}
					, CHAT_ID			=	#{chatId}
					, HOPE_DT			=	#{hopeDt}
					, HOPE_TM			=	#{hopeTm}
					, CNSL_PLACE		=	#{cnslPlace}
					, REQST_TEXT		=	#{reqstText}
					, MODI_ID			=	#{modiId}
					, MODI_IP			=	#{modiIp}
					, MODI_DTTM			=	NOW()
		WHERE	CNSL_ID	=	#{cnslId}
	</update>
	
	<!-- 상담 상태 처리 -->
	<update id="updateCnslStat" parameterType="cnslerVO">
		UPDATE	CNSL_MST
			SET	CNSL_STATUS_CD	=	#{cnslStatusCd}
		WHERE	CNSL_ID	=	#{cnslId}
	</update>
	
	<!-- 상담 삭제 처리 -->
	<delete id="deleteCnsl">
		DELETE FROM CNSL_MST WHERE CNSL_ID = #{cnslId}
	</delete>
	
	<!-- 상담관리 END -->
	<!-- 상담원일정 START -->
	
	<!-- 상담원별 상담일정 개수 -->
	<select id="selectCnslerSchTotCnt">
		SELECT
			COUNT(CNLSER_ID)
		FROM CNSLER_SCH
		WHERE CNSER_ID = #{cnslerId}
		<if test='searchValue != null and searchValue !=""'>
			<choose>
				<when test='searchOption == "title"'>
					AND TITLE LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "writer"'>
					AND WRITER LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "inptId"'>
					AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
				</when>
			</choose>
		</if>
		<if test='category != null and category !=""'>
			AND CATEGORY = #{category}
		</if>
		<if test='startDate != null and startDate !=""'>
			AND	DATE_FORMAT(INPT_DTTM, '%Y-%m-%d') &gt;= #{startDate}
		</if>
		<if test='endDate != null and endDate !=""'>
			AND	DATE_FORMAT(INPT_DTTM, '%Y-%m-%d') &lt;= #{endDate}
		</if>
	</select>
	
	<!-- 전체 상담리스트 조회 -->
	<select id="selectCnslerSchList" parameterType="map" resultType="cnslerVO">
		<include refid="paging.preSql"></include>
		SELECT
			  CNLSER_ID
			, SCH_DT
			, CNSL_AM_YN
			, CNSL_PM_YN
			, INPT_ID
			, INPT_DTTM
			, MODI_ID
			, MODI_DTTM
			, SCH_YM
		FROM CNSLER_SCH
		WHERE CNSLER_ID = #{cnslerId}
		<if test='searchValue != null and searchValue !=""'>
			<choose>
				<when test='searchOption == "title"'>
					AND TITLE LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "writer"'>
					AND WRITER LIKE CONCAT('%', #{searchValue} , '%')
				</when>
				<when test='searchOption == "inptId"'>
					AND INPT_ID LIKE CONCAT('%', #{searchValue} , '%')
				</when>
			</choose>
		</if>
		<if test='category != null and category !=""'>
			AND CATEGORY = #{category}
		</if>
		<if test='startDate != null and startDate !=""'>
			AND	DATE_FORMAT(INPT_DTTM, '%Y-%m-%d') &gt;= #{startDate}
		</if>
		<if test='endDate != null and endDate !=""'>
			AND	DATE_FORMAT(INPT_DTTM, '%Y-%m-%d') &lt;= #{endDate}
		</if>
		<include refid="paging.postSql"></include>
	</select>
	
	<!-- 날짜별 등록데이터 조회 -->
	<select id="selectCnslerSchListByCalendar" parameterType="map" resultType="cnslerVO">
		SELECT
			  CNSLER_ID
			, SCH_DT
			, CNSL_AM_YN
			, CNSL_PM_YN
			, INPT_ID
			, INPT_DTTM
			, MODI_ID
			, MODI_DTTM
			, SCH_YM
		FROM CNSLER_SCH
		WHERE CNSLER_ID = #{cnslerId}
		AND	SCH_DT &lt;= #{calendar.date}
		AND	SCH_DT &gt;= #{calendar.date}
	</select>
	
	<insert id="insertCnslerSch" parameterType="map">
		INSERT INTO CNSLER_SCH
		SELECT 
		  	  #{cnslerId}  AS CNSLER_ID
			, T.SCH_DT
		   	, #{cnslAmYn} AS CNSL_AM_YN
		   	, #{cnslPmYn} AS CNSL_PM_YN
		   	, #{inptId} AS INPT_ID
		   	, #{inptIp} AS INPT_IP
		   	, NOW() AS INPT_DTTM
		   	, NULL AS MODI_ID
		   	, NULL AS MODI_IP
		   	, NULL AS MODI_DTTM
		   	, DATE_FORMAT(T.SCH_DT, '%Y%m')
		FROM (
		        SELECT  DAYOFWEEK(SCH_DT)             AS DAYNO
		               ,DATE_FORMAT(SCH_DT, '%Y%m%d') AS SCH_DT
		        FROM    (SELECT @RNUM := @RNUM + 1                             AS ROWNUM
		                      , DATE(DATE_ADD(DATE_FORMAT(#{stDt}, '%Y%m%d'), INTERVAL @RNUM DAY)) AS SCH_DT
		                 FROM (SELECT @RNUM := -1) R
		                      ,COM_DB_LOG T
		                 ) T
		        WHERE  DATE_FORMAT(SCH_DT, '%Y%m%d') &lt;= DATE_FORMAT(#{edDt}, '%Y%m%d')
		    ) T
		WHERE (CONVERT(T.DAYNO, CHAR) = substring(#{selectDay},1,1)
		    OR CONVERT(T.DAYNO, CHAR) = substring(#{selectDay},2,1)
		    OR CONVERT(T.DAYNO, CHAR) = substring(#{selectDay},3,1)
		    OR CONVERT(T.DAYNO, CHAR) = substring(#{selectDay},4,1)
		    OR CONVERT(T.DAYNO, CHAR) = substring(#{selectDay},5,1)
		    OR CONVERT(T.DAYNO, CHAR) = substring(#{selectDay},6,1)
		    OR CONVERT(T.DAYNO, CHAR) = substring(#{selectDay},7,1)
		    )
	</insert>
	
	<!-- 상담일정 등록시 중복체크 -->
	<select id="selectCnslerSchDupl" parameterType="cnslerVO" resultType="int">
		SELECT 
			COUNT(CNSLER_ID)
		FROM CNSLER_SCH
		WHERE CNSLER_ID = #{cnslerId} 
		AND DATE_FORMAT(SCH_DT, '%Y-%m-%d') &gt;= #{stDt}
		AND DATE_FORMAT(SCH_DT, '%Y-%m-%d') &lt;= #{edDt}
	</select>
	
	<!-- 상담일정 1개조회 -->
	<select id="selectCnslerSchDetail" parameterType="cnslerVO" resultType="cnslerVO">
		SELECT 
			  CNSLER_ID
			, SCH_DT
			, CNSL_AM_YN
			, CNSL_PM_YN
			, INPT_ID
			, INPT_IP
			, INPT_DTTM
			, MODI_ID
			, MODI_IP
			, MODI_DTTM
			, SCH_YM
		FROM CNSLER_SCH 
		WHERE CNSLER_ID = #{cnslerId} 
		AND SCH_DT = #{schDt}
	</select>
	
	<!-- 상담일정 삭제 -->
	<delete id="deleteCnslerSch" parameterType="cnslerVO">
		DELETE FROM CNSLER_SCH
		WHERE CNSLER_ID = #{cnslerId}
		AND SCH_DT = #{schDt} 
	</delete>
	
	<!-- 상담일정 수정 -->
	<update id="updateCnslerSch" parameterType="cnslerVO">
		UPDATE CNSLER_SCH
			SET 
			  CNSL_AM_YN = #{cnslAmYn}
			, CNSL_PM_YN = #{cnslPmYn}
			, MODI_ID = #{inptId}
			, MODI_IP = #{inptIp}
			, MODI_DTTM = NOW()
		WHERE CNSLER_ID = #{cnslerId}
		AND SCH_DT = #{schDt} 
	</update>
	
	<!-- 상담원일정 END -->

	<select id="selectCnslerDeptCd" parameterType="map" resultType="CnslerVO">
		SELECT 	A.DEPT_CD AS CNSL_DEPT_CD
			 	,A.DEPT_NM_KOR AS DEPT_NM_KOR
		FROM	com_dept_cd A
		WHERE 	A.HI_DEPT_CD = #{cnslColg}
	</select>
	
</mapper>