<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nanwe.prog.service.impl.ProgSurvAnswMapper">
	
	<insert id="insertSurvAnsw" parameterType="progSurvAnswVO">
		INSERT
		INTO	PROG_SURV_ANSW
		(
				  SURV_ID
				, QUES_IDX
				, ITEM_IDX
				, ANSW_CONTENT
				, ANSW_POINT
				, INPT_ID
				, INPT_IP
				, INPT_DTTM
		) VALUES (
				  #{survId}
				, #{quesIdx}
				, #{itemIdx}
				, #{answContent}
				, #{answPoint}
				, #{inptId}
				, #{inptIp}
				, NOW()
		)
	</insert>
	
	<insert id="insertSurvAnswList" parameterType="map">		
		INSERT
		INTO	PROG_SURV_ANSW
		(
				  PROG_ID
				, USER_ID
				, SURV_ID
				, QUES_IDX
				, ITEM_IDX
				, ANSW_CONTENT
				, ANSW_POINT
				, INPT_ID
				, INPT_IP
				, INPT_DTTM
		) 
		VALUES 
		<foreach item="i" collection="answList" separator=",">
		(
				  #{i.progId}
				, #{i.userId}
				, #{i.survId}
				, #{i.quesIdx}
				, #{i.itemIdx}
				, #{i.answContent}
				, IFNULL((SELECT A.ITEM_POINT FROM PROG_SURV_ITEM A WHERE A.PROG_ID = #{i.progId} AND A.SURV_ID = #{i.survId} AND A.QUES_IDX = #{i.quesIdx} AND A.ITEM_IDX = #{i.itemIdx}), 0)
				, #{i.inptId}
				, #{i.inptIp}
				, NOW()
		)
		</foreach>
	</insert>

	<delete id="deleteSurvAnswBySurvId" parameterType="string">
		DELETE 
		FROM		PROG_SURV_ANSW
		WHERE		SURV_ID = #{survId}
	</delete>
	
	<delete id="deleteSurvAnswByLoginId" parameterType="map">
		DELETE 
		FROM		PROG_SURV_ANSW
		WHERE		SURV_ID = #{survId}
		AND			INPT_ID = #{loginId}
	</delete>
	
	<select id="selectSurvAnswUserList" parameterType="int" resultType="progSurvAnswVO">
		SELECT 		
					  A.INPT_ID
					, B.USER_NM AS INPT_NM					
		FROM		(
						SELECT	DISTINCT(INPT_ID)
						FROM	PROG_SURV_ANSW
						WHERE	PROG_ID = #{progId}
					) A
		LEFT JOIN	COM_USER B
		ON			A.INPT_ID = B.USER_ID
	</select>
	
	<select id="selectSurvAnswEtcList" parameterType="map" resultType="string">
		SELECT	ANSW_CONTENT
		FROM	PROG_SURV_ANSW
		WHERE	PROG_ID = #{progId}
		AND		QUES_IDX = #{quesIdx}
		AND		ITEM_IDX = #{itemIdx}
	</select>
	
	<select id="selectSurvAnswListByUser" parameterType="map" resultType="progSurvAnswVO">
		SELECT
		              A.SURV_ID
		            , A.QUES_IDX
		            , A.ITEM_IDX
		            , A.ITEM_TITLE
		            , A.ITEM_POINT
		            , IFNULL(B.ANSW_CONTENT, '') ANSW_CONTENT
		            , IFNULL(B.ANSW_POINT, 0) ANSW_POINT
		            , B.INPT_ID
		FROM		PROG_SURV_ITEM A
		LEFT JOIN  	(
		                SELECT  
		                          SURV_ID
		                        , QUES_IDX
		                        , ITEM_IDX
		                        , ANSW_CONTENT
		                        , ANSW_POINT
		                        , INPT_ID
		                FROM    PROG_SURV_ANSW
		                WHERE	PROG_ID = #{progId}
						AND		QUES_IDX = #{quesIdx}
						AND		INPT_ID = #{inptId}
		            ) B
		ON			(A.SURV_ID = B.SURV_ID AND A.QUES_IDX = B.QUES_IDX AND A.ITEM_IDX = B.ITEM_IDX)
		WHERE		A.PROG_ID = #{progId}
		AND			A.QUES_IDX = #{quesIdx}
		AND			A.USE_YN = 'Y'
		ORDER BY	A.ITEM_SORT ASC
	</select>
	
</mapper>