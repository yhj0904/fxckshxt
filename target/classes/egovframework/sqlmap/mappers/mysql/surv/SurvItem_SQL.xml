<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nanwe.surv.service.impl.SurvItemMapper">
	
	<select id="selectSurvItemList" parameterType="map" resultType="survItemVO">
		SELECT
					  SURV_ID
					, QUES_IDX
					, ITEM_IDX
					, ITEM_TITLE
					, ITEM_MEMO
					, ITEM_POINT
					, ITEM_ETC
					, ITEM_SORT
					, USE_YN
					, INPT_ID
					, INPT_IP
					, INPT_DTTM
					, MODI_ID
					, MODI_IP
					, MODI_DTTM
		FROM		COM_SURV_ITEM
		WHERE		SURV_ID = #{survId}
		AND			QUES_IDX = #{quesIdx}
		<if test='useYn != null and useYn != ""'>
			AND		USE_YN = #{useYn}
		</if>
		ORDER BY	ITEM_SORT ASC
	</select>
	
	<insert id="insertSurvItem" parameterType="survItemVO">
		<selectKey resultType="int" keyProperty="itemIdx" order="BEFORE">
			SELECT IFNULL(MAX(A.ITEM_IDX), 0)+1 FROM COM_SURV_ITEM A WHERE A.SURV_ID = #{survId} AND A.QUES_IDX = #{quesIdx}
		</selectKey>
		INSERT
		INTO	COM_SURV_ITEM
		(
				  SURV_ID
				, QUES_IDX
				, ITEM_IDX
				, ITEM_TITLE
				, ITEM_MEMO
				, ITEM_POINT
				, ITEM_ETC
				, ITEM_SORT
				, USE_YN
				, INPT_ID
				, INPT_IP
				, INPT_DTTM
				, MODI_ID
				, MODI_IP
				, MODI_DTTM
		) VALUES (
				  #{survId}
				, #{quesIdx}
				, #{itemIdx}
				, #{itemTitle}
				, #{itemMemo}
				, #{itemPoint}
				, #{itemEtc}
				<choose>
					<when test="itemSort gt 0">
						, #{itemSort}
					</when>
					<otherwise>
						, (SELECT IFNULL(MAX(A.ITEM_SORT), 0)+1 FROM COM_SURV_ITEM A WHERE A.SURV_ID = #{survId} AND A.QUES_IDX = #{quesIdx})
					</otherwise>
				</choose>
				, #{useYn}
				, #{inptId}
				, #{inptIp}
				, NOW()
				, #{inptId}
				, #{inptIp}
				, NOW()
		)
	</insert>
	
	<update id="updateSurvItem" parameterType="survItemVO">
		UPDATE
				COM_SURV_ITEM
		SET
			 	  ITEM_TITLE	= #{itemTitle}
				, ITEM_MEMO		= #{itemMemo}
				, ITEM_POINT	= #{itemPoint}
				, ITEM_ETC		= #{itemEtc}
				, ITEM_SORT		= #{itemSort}
				, USE_YN		= #{useYn}
				, MODI_ID		= #{modiId}
				, MODI_IP		= #{modiIp}
				, MODI_DTTM		= NOW()
		WHERE	SURV_ID = #{survId}
		AND		QUES_IDX = #{quesIdx}
		AND		ITEM_IDX = #{itemIdx}
	</update>
	
	<delete id="deleteSurvItem" parameterType="survItemVO">
		DELETE 
		FROM		COM_SURV_ITEM
		WHERE		SURV_ID = #{survId}
		AND			QUES_IDX = #{quesIdx}
		AND			ITEM_IDX = #{itemIdx}
	</delete>

	<delete id="deleteSurvItemBySurvId" parameterType="string">
		DELETE 
		FROM		COM_SURV_ITEM
		WHERE		SURV_ID = #{survId}
	</delete>

	<delete id="deleteSurvItemByQuesIdx" parameterType="map">
		DELETE 
		FROM		COM_SURV_ITEM
		WHERE		SURV_ID = #{survId}
		AND			QUES_IDX = #{quesIdx}
	</delete>
	
	<select id="selectSurvItemResult" parameterType="map" resultType="survItemVO">
		SELECT 
		        	S.* 
		        	, CONCAT(CAST(ROUND((S.ANSW_CNT/${totalCount}) * 100, 1) AS CHAR(5)),'%') AS ANSW_PERCENT
		FROM (
					SELECT
					              A.SURV_ID
								, A.QUES_IDX
								, A.ITEM_IDX
								, A.ITEM_TITLE
								, A.ITEM_MEMO
								, A.ITEM_POINT
								, A.ITEM_ETC
								, A.ITEM_SORT
								, IFNULL(B.ANSW_CNT, 0) AS ANSW_CNT
					FROM		COM_SURV_ITEM A
					LEFT JOIN   (
					                SELECT	    
									              QUES_IDX
									            , ITEM_IDX
									            , COUNT(ITEM_IDX) AS ANSW_CNT
									FROM	    COM_SURV_ANSW
									WHERE       SURV_ID = #{survId}
									AND			QUES_IDX = #{quesIdx}
									GROUP BY    QUES_IDX, ITEM_IDX
					            ) B
					ON          (A.QUES_IDX = B.QUES_IDX AND A.ITEM_IDX = B.ITEM_IDX)
					WHERE       A.SURV_ID = #{survId}
					AND			A.QUES_IDX = #{quesIdx}
					AND		    A.USE_YN = 'Y'
					ORDER BY	A.ITEM_SORT ASC
		) S
	</select>
	
</mapper>